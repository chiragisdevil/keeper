{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","Footer","year","Date","getFullYear","Note","props","className","title","content","onClick","updateNotes","id","CreateArea","useState","notesTitle","setNotesTitle","notesContent","setNotesContent","onChange","event","target","name","value","placeholder","rows","note","notetitle","noteContent","createNotes","prevValue","preventDefault","App","notes","location","filter","index","map","key","ReactDOM","render","document","getElementById"],"mappings":"yLAUeA,MARf,WACE,OACE,gCACE,wCCMSC,MATf,WACE,IAAMC,GAAO,IAAIC,MAAOC,cACxB,OACE,gCACE,+CAAgBF,KCUPG,MAdf,SAAcC,GAKZ,OACE,yBAAKC,UAAU,QACb,4BAAKD,EAAME,OACX,2BAAIF,EAAMG,SACV,4BAAQC,QARZ,WACEJ,EAAMK,YAAYL,EAAMM,MAOtB,Y,OCmCSC,MA5Cf,SAAoBP,GAAQ,IAAD,EACWQ,mBAAS,IADpB,mBAClBC,EADkB,KACNC,EADM,OAEeF,mBAAS,IAFxB,mBAElBG,EAFkB,KAEJC,EAFI,KA4BzB,OACE,6BACE,0BAAMC,SA1BV,SAAqBC,GACO,UAAtBA,EAAMC,OAAOC,KACfN,EAAcI,EAAMC,OAAOE,OAE3BL,EAAgBE,EAAMC,OAAOE,SAuB3B,2BAAOD,KAAK,QAAQE,YAAY,QAAQD,MAAOR,IAC/C,8BACEO,KAAK,UACLE,YAAY,iBACZC,KAAK,IACLF,MAAON,IAET,4BAAQP,QA1Bd,SAAsBU,GACpB,IAAMM,EAAO,CACXC,UAAWZ,EACXa,YAAaX,GAGfX,EAAMuB,aAAY,SAACC,GACjB,MAAM,GAAN,mBAAWA,GAAX,CAAsBJ,OAGxBV,EAAc,IACdE,EAAgB,IAEhBE,EAAMW,mBAaF,QCAOC,MAlCf,WAAgB,IAAD,EACgBlB,mBAAS,IADzB,mBACNmB,EADM,KACCJ,EADD,KAGb,SAASlB,EAAYuB,GACnBL,GAAY,SAACC,GACX,OAAOA,EAAUK,QAAO,SAACT,EAAMU,GAC7B,OAAOA,IAAUF,QAKvB,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYL,YAAaA,IACxBI,EAAMI,KAAI,SAACX,EAAMU,GAAW,IACnBT,EAA2BD,EAA3BC,UAAWC,EAAgBF,EAAhBE,YAEnB,OACE,kBAAC,EAAD,CACEU,IAAKF,EACLxB,GAAIwB,EACJ5B,MAAOmB,EACPlB,QAASmB,EACTjB,YAAaA,OAKnB,kBAAC,EAAD,QC/BN4B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.9cee1ba5.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>Keeper</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer>\n      <p>Copyright â“’ {year}</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\nfunction Note(props) {\n  function initiateDelete() {\n    props.updateNotes(props.id);\n  }\n\n  return (\n    <div className=\"note\">\n      <h1>{props.title}</h1>\n      <p>{props.content}</p>\n      <button onClick={initiateDelete}>DELETE</button>\n    </div>\n  );\n}\n\nexport default Note;\n","import React, { useState } from \"react\";\n\nfunction CreateArea(props) {\n  const [notesTitle, setNotesTitle] = useState(\"\");\n  const [notesContent, setNotesContent] = useState(\"\");\n\n  function handleInput(event) {\n    if (event.target.name === \"title\") {\n      setNotesTitle(event.target.value);\n    } else {\n      setNotesContent(event.target.value);\n    }\n  }\n\n  function handleSubmit(event) {\n    const note = {\n      notetitle: notesTitle,\n      noteContent: notesContent\n    };\n\n    props.createNotes((prevValue) => {\n      return [...prevValue, note];\n    });\n\n    setNotesTitle(\"\");\n    setNotesContent(\"\");\n\n    event.preventDefault();\n  }\n\n  return (\n    <div>\n      <form onChange={handleInput}>\n        <input name=\"title\" placeholder=\"Title\" value={notesTitle} />\n        <textarea\n          name=\"content\"\n          placeholder=\"Take a note...\"\n          rows=\"3\"\n          value={notesContent}\n        />\n        <button onClick={handleSubmit}>+</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\nfunction App() {\n  const [notes, createNotes] = useState([]);\n\n  function updateNotes(location) {\n    createNotes((prevValue) => {\n      return prevValue.filter((note, index) => {\n        return index !== location;\n      });\n    });\n  }\n\n  return (\n    <div>\n      <Header />\n      <CreateArea createNotes={createNotes} />\n      {notes.map((note, index) => {\n        const { notetitle, noteContent } = note;\n\n        return (\n          <Note\n            key={index}\n            id={index}\n            title={notetitle}\n            content={noteContent}\n            updateNotes={updateNotes}\n          />\n        );\n      })}\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE:\n//1. Implement the add note functionality.\n//- Create a constant that keeps track of the title and content.\n//- Pass the new note back to the App.\n//- Add new note to an array.\n//- Take array and render seperate Note components for each item.\n\n//2. Implement the delete note functionality.\n//- Callback from the Note component to trigger a delete function.\n//- Use the filter function to filter out the item that needs deletion.\n//- Pass a id over to the Note component, pass it back to the App when deleting.\n\n//This is the end result you're aiming for:\n//https://pogqj.csb.app/\n"],"sourceRoot":""}